---
- name: Check for existing vistaicm-server installation     
  stat: path={{install_dir}}
  register: p

- name: Cleanup previous archive download
  file: path=/tmp/vistaicm.zip state=absent
  when: not p.stat.exists

- name: Cleanup previous unarchive directory
  file: path=/tmp/vistaicm-server-master state=absent
  when: not p.stat.exists

- name: Download vistaicm-server archive from Github repo
  get_url:
    url: https://github.com/bradyholt/vistaicm-server/archive/master.zip
    dest: /tmp/vistaicm.zip
  when: not p.stat.exists

- name: Unzip archive
  unarchive: src=/tmp/vistaicm.zip dest=/tmp/ copy=no
  when: not p.stat.exists

- name: Create vistaicm-server install directory
  file: path={{install_dir}} state=directory mode=0775
  when: not p.stat.exists

- name: Sync files to {{install_dir}}
  synchronize: src=/tmp/vistaicm-server-master/ dest={{install_dir}} recursive=yes
  delegate_to: "{{inventory_hostname}}"
  notify: restart vistaicm-server-service
  when: not p.stat.exists

- name: npm install
  npm: path={{install_dir}} state=latest
  when: not p.stat.exists

- name: Show Garage Door buttons
  lineinfile:
    state: present
    dest: "{{install_dir}}/www/index.html"
    regexp: 'garage_doors.+none'
    line: "<div class='garage_doors' style='display: block;'>"
  when: not p.stat.exists

- name: Configure pound_commands
  lineinfile:
    state: present
    dest: "{{install_dir}}/config.js"
    regexp: 'pound_commands'
    line: "pound_commands: {{vistaicm_server_pound_commands}}"
  notify: restart vistaicm-server-service

- name: Install hooks
  template: src={{ item }} dest={{install_dir}}/hooks/{{ item | basename | regex_replace('\.j2','') }}
  with_fileglob:
    - ../templates/hooks/*.j2
  notify: restart vistaicm-server-service
  tags:
    - vistaicm-hooks

- name: Install vistaicm-server-service systemd unit file
  template: src=vistaicm-server.service.j2 dest=/etc/systemd/system/vistaicm-server.service
  notify: restart vistaicm-server-service